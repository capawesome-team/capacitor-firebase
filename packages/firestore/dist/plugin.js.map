{"version":3,"file":"plugin.js","sources":["esm/index.js","esm/web.js"],"sourcesContent":["import { registerPlugin } from '@capacitor/core';\nconst FirebaseFirestore = registerPlugin('FirebaseFirestore', {\n    web: () => import('./web').then(m => new m.FirebaseFirestoreWeb()),\n});\nexport * from './definitions';\nexport { FirebaseFirestore };\n//# sourceMappingURL=index.js.map","import { WebPlugin } from '@capacitor/core';\nimport { addDoc, and, clearIndexedDbPersistence, collection, collectionGroup, connectFirestoreEmulator, deleteDoc, disableNetwork, doc, enableNetwork, endAt, endBefore, getCountFromServer, getDoc, getDocs, getFirestore, limit, limitToLast, onSnapshot, or, orderBy, query, setDoc, startAfter, startAt, updateDoc, where, writeBatch, } from 'firebase/firestore';\nexport class FirebaseFirestoreWeb extends WebPlugin {\n    constructor() {\n        super(...arguments);\n        this.unsubscribesMap = new Map();\n    }\n    async addDocument(options) {\n        const firestore = getFirestore();\n        const { reference, data } = options;\n        const documentReference = await addDoc(collection(firestore, reference), data);\n        return {\n            reference: {\n                id: documentReference.id,\n                path: documentReference.path,\n            },\n        };\n    }\n    async setDocument(options) {\n        const firestore = getFirestore();\n        const { reference, data, merge } = options;\n        await setDoc(doc(firestore, reference), data, {\n            merge,\n        });\n    }\n    async getDocument(options) {\n        const firestore = getFirestore();\n        const { reference } = options;\n        const documentSnapshot = await getDoc(doc(firestore, reference));\n        const documentSnapshotData = documentSnapshot.data();\n        return {\n            snapshot: {\n                id: documentSnapshot.id,\n                path: documentSnapshot.ref.path,\n                data: (documentSnapshotData === undefined\n                    ? null\n                    : documentSnapshotData),\n                metadata: {\n                    hasPendingWrites: documentSnapshot.metadata.hasPendingWrites,\n                    fromCache: documentSnapshot.metadata.fromCache,\n                },\n            },\n        };\n    }\n    async updateDocument(options) {\n        const firestore = getFirestore();\n        const { reference, data } = options;\n        await updateDoc(doc(firestore, reference), data);\n    }\n    async deleteDocument(options) {\n        const firestore = getFirestore();\n        const { reference } = options;\n        await deleteDoc(doc(firestore, reference));\n    }\n    async writeBatch(options) {\n        const firestore = getFirestore();\n        const { operations } = options;\n        const batch = writeBatch(firestore);\n        for (const operation of operations) {\n            const { type, reference, data } = operation;\n            const documentReference = doc(firestore, reference);\n            switch (type) {\n                case 'set':\n                    batch.set(documentReference, data);\n                    break;\n                case 'update':\n                    batch.update(documentReference, data !== null && data !== void 0 ? data : {});\n                    break;\n                case 'delete':\n                    batch.delete(documentReference);\n                    break;\n            }\n        }\n        await batch.commit();\n    }\n    async getCollection(options) {\n        const collectionQuery = await this.buildCollectionQuery(options, 'collection');\n        const collectionSnapshot = await getDocs(collectionQuery);\n        return {\n            snapshots: collectionSnapshot.docs.map(documentSnapshot => ({\n                id: documentSnapshot.id,\n                path: documentSnapshot.ref.path,\n                data: documentSnapshot.data(),\n                metadata: {\n                    hasPendingWrites: documentSnapshot.metadata.hasPendingWrites,\n                    fromCache: documentSnapshot.metadata.fromCache,\n                },\n            })),\n        };\n    }\n    async getCollectionGroup(options) {\n        const collectionQuery = await this.buildCollectionQuery(options, 'collectionGroup');\n        const collectionSnapshot = await getDocs(collectionQuery);\n        return {\n            snapshots: collectionSnapshot.docs.map(documentSnapshot => ({\n                id: documentSnapshot.id,\n                path: documentSnapshot.ref.path,\n                data: documentSnapshot.data(),\n                metadata: {\n                    hasPendingWrites: documentSnapshot.metadata.hasPendingWrites,\n                    fromCache: documentSnapshot.metadata.fromCache,\n                },\n            })),\n        };\n    }\n    async getCountFromServer(options) {\n        const firestore = getFirestore();\n        const { reference } = options;\n        const coll = collection(firestore, reference);\n        const snapshot = await getCountFromServer(coll);\n        return { count: snapshot.data().count };\n    }\n    async clearPersistence() {\n        const firestore = getFirestore();\n        await clearIndexedDbPersistence(firestore);\n    }\n    async enableNetwork() {\n        const firestore = getFirestore();\n        await enableNetwork(firestore);\n    }\n    async disableNetwork() {\n        const firestore = getFirestore();\n        await disableNetwork(firestore);\n    }\n    async useEmulator(options) {\n        const firestore = getFirestore();\n        const port = options.port || 8080;\n        connectFirestoreEmulator(firestore, options.host, port);\n    }\n    async addDocumentSnapshotListener(options, callback) {\n        const firestore = getFirestore();\n        const unsubscribe = onSnapshot(doc(firestore, options.reference), {\n            includeMetadataChanges: options.includeMetadataChanges,\n            source: options.source,\n        }, snapshot => {\n            const data = snapshot.data();\n            const event = {\n                snapshot: {\n                    id: snapshot.id,\n                    path: snapshot.ref.path,\n                    data: (data === undefined ? null : data),\n                    metadata: {\n                        hasPendingWrites: snapshot.metadata.hasPendingWrites,\n                        fromCache: snapshot.metadata.fromCache,\n                    },\n                },\n            };\n            callback(event, undefined);\n        }, error => callback(null, error));\n        const id = Date.now().toString();\n        this.unsubscribesMap.set(id, unsubscribe);\n        return id;\n    }\n    async addCollectionSnapshotListener(options, callback) {\n        const collectionQuery = await this.buildCollectionQuery(options, 'collection');\n        const unsubscribe = onSnapshot(collectionQuery, {\n            includeMetadataChanges: options.includeMetadataChanges,\n            source: options.source,\n        }, snapshot => {\n            const event = {\n                snapshots: snapshot.docs.map(documentSnapshot => ({\n                    id: documentSnapshot.id,\n                    path: documentSnapshot.ref.path,\n                    data: documentSnapshot.data(),\n                    metadata: {\n                        hasPendingWrites: documentSnapshot.metadata.hasPendingWrites,\n                        fromCache: documentSnapshot.metadata.fromCache,\n                    },\n                })),\n            };\n            callback(event, undefined);\n        }, error => callback(null, error));\n        const id = Date.now().toString();\n        this.unsubscribesMap.set(id, unsubscribe);\n        return id;\n    }\n    async addCollectionGroupSnapshotListener(options, callback) {\n        const collectionQuery = await this.buildCollectionQuery(options, 'collectionGroup');\n        const unsubscribe = onSnapshot(collectionQuery, {\n            includeMetadataChanges: options.includeMetadataChanges,\n            source: options.source,\n        }, snapshot => {\n            const event = {\n                snapshots: snapshot.docs.map(documentSnapshot => ({\n                    id: documentSnapshot.id,\n                    path: documentSnapshot.ref.path,\n                    data: documentSnapshot.data(),\n                    metadata: {\n                        hasPendingWrites: documentSnapshot.metadata.hasPendingWrites,\n                        fromCache: documentSnapshot.metadata.fromCache,\n                    },\n                })),\n            };\n            callback(event, undefined);\n        }, error => callback(null, error));\n        const id = Date.now().toString();\n        this.unsubscribesMap.set(id, unsubscribe);\n        return id;\n    }\n    async removeSnapshotListener(options) {\n        const unsubscribe = this.unsubscribesMap.get(options.callbackId);\n        if (!unsubscribe) {\n            return;\n        }\n        unsubscribe();\n        this.unsubscribesMap.delete(options.callbackId);\n    }\n    async removeAllListeners() {\n        this.unsubscribesMap.forEach(unsubscribe => unsubscribe());\n        this.unsubscribesMap.clear();\n        await super.removeAllListeners();\n    }\n    async buildCollectionQuery(options, type) {\n        const firestore = getFirestore();\n        let collectionQuery;\n        if (options.compositeFilter) {\n            const compositeFilter = this.buildFirebaseQueryCompositeFilterConstraint(options.compositeFilter);\n            const queryConstraints = await this.buildFirebaseQueryNonFilterConstraints(options.queryConstraints || []);\n            collectionQuery = query(type === 'collection'\n                ? collection(firestore, options.reference)\n                : collectionGroup(firestore, options.reference), compositeFilter, ...queryConstraints);\n        }\n        else {\n            const queryConstraints = await this.buildFirebaseQueryConstraints(options.queryConstraints || []);\n            collectionQuery = query(type === 'collection'\n                ? collection(firestore, options.reference)\n                : collectionGroup(firestore, options.reference), ...queryConstraints);\n        }\n        return collectionQuery;\n    }\n    buildFirebaseQueryCompositeFilterConstraint(compositeFilter) {\n        const queryConstraints = this.buildFirebaseQueryFilterConstraints(compositeFilter.queryConstraints);\n        if (compositeFilter.type === 'and') {\n            return and(...queryConstraints);\n        }\n        else {\n            return or(...queryConstraints);\n        }\n    }\n    buildFirebaseQueryFilterConstraints(queryfilterConstraints) {\n        const firebaseQueryFilterConstraints = [];\n        for (const queryfilterConstraint of queryfilterConstraints) {\n            const firebaseQueryFilterConstraint = this.buildFirebaseQueryFilterConstraint(queryfilterConstraint);\n            firebaseQueryFilterConstraints.push(firebaseQueryFilterConstraint);\n        }\n        return firebaseQueryFilterConstraints;\n    }\n    buildFirebaseQueryFilterConstraint(queryFilterConstraints) {\n        if (queryFilterConstraints.type === 'where') {\n            return this.buildFirebaseQueryFieldFilterConstraint(queryFilterConstraints);\n        }\n        else {\n            return this.buildFirebaseQueryCompositeFilterConstraint(queryFilterConstraints);\n        }\n    }\n    buildFirebaseQueryFieldFilterConstraint(queryfilterConstraints) {\n        return where(queryfilterConstraints.fieldPath, queryfilterConstraints.opStr, queryfilterConstraints.value);\n    }\n    async buildFirebaseQueryNonFilterConstraints(queryConstraints) {\n        const firebaseQueryNonFilterConstraints = [];\n        for (const queryConstraint of queryConstraints) {\n            const firebaseQueryNonFilterConstraint = await this.buildFirebaseQueryNonFilterConstraint(queryConstraint);\n            firebaseQueryNonFilterConstraints.push(firebaseQueryNonFilterConstraint);\n        }\n        return firebaseQueryNonFilterConstraints;\n    }\n    async buildFirebaseQueryNonFilterConstraint(queryConstraints) {\n        switch (queryConstraints.type) {\n            case 'orderBy':\n                return orderBy(queryConstraints.fieldPath, queryConstraints.directionStr);\n            case 'limit':\n                return limit(queryConstraints.limit);\n            case 'limitToLast':\n                return limitToLast(queryConstraints.limit);\n            case 'startAt':\n            case 'startAfter':\n            case 'endAt':\n            case 'endBefore': {\n                const firestore = getFirestore();\n                const documentSnapshot = await getDoc(doc(firestore, queryConstraints.reference));\n                switch (queryConstraints.type) {\n                    case 'startAt':\n                        return startAt(documentSnapshot);\n                    case 'startAfter':\n                        return startAfter(documentSnapshot);\n                    case 'endAt':\n                        return endAt(documentSnapshot);\n                    case 'endBefore':\n                        return endBefore(documentSnapshot);\n                }\n            }\n        }\n    }\n    async buildFirebaseQueryConstraints(queryConstraints) {\n        const firebaseQueryConstraints = [];\n        for (const queryConstraint of queryConstraints) {\n            const firebaseQueryConstraint = await this.buildFirebaseQueryConstraint(queryConstraint);\n            firebaseQueryConstraints.push(firebaseQueryConstraint);\n        }\n        return firebaseQueryConstraints;\n    }\n    async buildFirebaseQueryConstraint(queryConstraint) {\n        if (queryConstraint.type === 'where') {\n            return this.buildFirebaseQueryFieldFilterConstraint(queryConstraint);\n        }\n        else {\n            return await this.buildFirebaseQueryNonFilterConstraint(queryConstraint);\n        }\n    }\n}\n//# sourceMappingURL=web.js.map"],"names":["registerPlugin","WebPlugin","firestore","getFirestore","addDoc","collection","setDoc","doc","getDoc","updateDoc","deleteDoc","writeBatch","getDocs","getCountFromServer","clearIndexedDbPersistence","enableNetwork","disableNetwork","connectFirestoreEmulator","onSnapshot","query","collectionGroup","and","or","where","orderBy","limit","limitToLast","startAt","startAfter","endAt","endBefore"],"mappings":"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"}