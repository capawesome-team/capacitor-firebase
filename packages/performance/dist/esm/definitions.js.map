{"version":3,"file":"definitions.js","sourceRoot":"","sources":["../../src/definitions.ts"],"names":[],"mappings":"","sourcesContent":["export interface FirebasePerformancePlugin {\n  /**\n   * Starts a trace.\n   *\n   * @since 0.1.0\n   */\n  startTrace(options: StartTraceOptions): Promise<void>;\n  /**\n   * Stops a trace.\n   *\n   * @since 0.1.0\n   */\n  stopTrace(options: StopTraceOptions): Promise<void>;\n  /**\n   * Atomically increments the metric with the given name for the selected trace by the `incrementBy` value.\n   *\n   * @since 0.1.0\n   */\n  incrementMetric(options: IncrementMetricOptions): Promise<void>;\n  /**\n   * Enables or disables performance monitoring.\n   * Will be applied with the next start of the app.\n   *\n   * @since 0.1.0\n   */\n  setEnabled(options: SetEnabledOptions): Promise<void>;\n  /**\n   * Determines whether performance monitoring is enabled or disabled.\n   *\n   * @since 0.1.0\n   */\n  isEnabled(): Promise<IsEnabledResult>;\n  /**\n   * Sets a custom attribute of a trace to a given value.\n   *\n   * @since 6.3.0\n   */\n  putAttribute(options: PutAttributeOptions): Promise<void>;\n  /**\n   * Returns the value of a custom attribute of a trace.\n   *\n   * @since 6.3.0\n   */\n  getAttribute(options: GetAttributeOptions): Promise<GetAttributeResult>;\n  /**\n   * Gets the all the custom attributes of a trace with their values.\n   *\n   * @since 6.3.0\n   */\n  getAttributes(options: GetAttributesOptions): Promise<GetAttributesResult>;\n  /**\n   * Removes a custom attribute from a trace given its name.\n   *\n   * @since 6.3.0\n   */\n  removeAttribute(options: RemoveAttributeOptions): Promise<void>;\n  /**\n   * Sets the value of a custom metric.\n   *\n   * @since 6.3.0\n   */\n  putMetric(options: PutMetricOptions): Promise<void>;\n  /**\n   * Get the value of a custom metric by name.\n   *\n   * @since 6.3.0\n   */\n  getMetric(options: GetMetricOptions): Promise<GetMetricResult>;\n  /**\n   * Records a trace given its name and options.\n   *\n   * Only available on web.\n   *\n   * @since 6.3.0\n   */\n  record(options: RecordOptions): Promise<void>;\n}\n\n/**\n * @since 0.1.0\n */\nexport interface StartTraceOptions {\n  /**\n   * Custom trace name.\n   *\n   * Names for custom code traces must meet the following requirements:\n   * no leading or trailing whitespace, no leading underscore (_) character,\n   * and max length is 100 characters.\n   *\n   * @since 0.1.0\n   */\n  traceName: string;\n}\n\n/**\n * @since 0.1.0\n */\nexport interface StopTraceOptions {\n  /**\n   * Name of the trace that was set with `startTrace`.\n   *\n   * @since 0.1.0\n   */\n  traceName: string;\n}\n\n/**\n * @since 0.1.0\n */\nexport interface IncrementMetricOptions {\n  /**\n   * Name of the trace that was set with `startTrace`.\n   *\n   * @since 0.1.0\n   */\n  traceName: string;\n  /**\n   * Name of the metric to be incremented.\n   *\n   * @since 0.1.0\n   */\n  metricName: string;\n  /**\n   * Amount by which the metric has to be incremented.\n   *\n   * @default 1\n   * @since 0.1.0\n   */\n  incrementBy?: number;\n}\n\n/**\n * @since 0.1.0\n */\nexport interface SetEnabledOptions {\n  /**\n   * Should performance monitoring be enabled.\n   *\n   * @since 0.1.0\n   */\n  enabled: boolean;\n}\n\nexport interface IsEnabledResult {\n  /**\n   * `true` if performance monitoring is enabled, otherwise `false`.\n   *\n   * @since 0.1.0\n   */\n  enabled: boolean;\n}\n\n/**\n * @since 6.3.0\n */\nexport interface PutAttributeOptions {\n  /**\n   * Name of the trace to set its attribute.\n   *\n   * @since 6.3.0\n   */\n  traceName: string;\n  /**\n   * Name of the attribute to set its value.\n   *\n   * @since 6.3.0\n   * @example \"experiment\"\n   */\n  attribute: string;\n  /**\n   * The value to set to the attribute.\n   *\n   * @since 6.3.0\n   * @example \"A\"\n   */\n  value: string;\n}\n\n/**\n * @since 6.3.0\n */\nexport interface GetAttributeOptions {\n  /**\n   * Name of the trace to set its attribute.\n   *\n   * @since 6.3.0\n   */\n  traceName: string;\n  /**\n   * Name of the attribute to retrieve its value.\n   *\n   * @since 6.3.0\n   */\n  attribute: string;\n}\n\n/**\n * @since 6.3.0\n */\nexport interface GetAttributeResult {\n  /**\n   * The value of the custom attribute.\n   *\n   * @since 6.3.0\n   */\n  value: string | null;\n}\n\n/**\n * @since 6.3.0\n */\nexport interface GetAttributesOptions {\n  /**\n   * Name of the trace to get its attributes.\n   *\n   * @since 6.3.0\n   */\n  traceName: string;\n}\n\n/**\n * @since 6.3.0\n */\nexport interface GetAttributesResult {\n  /**\n   * A map of all custom attributes of a trace with their values.\n   *\n   * @since 6.3.0\n   */\n  attributes: { [key: string]: string };\n}\n\n/**\n * @since 6.3.0\n */\nexport type RemoveAttributeOptions = GetAttributeOptions;\n\n/**\n * @since 6.3.0\n */\nexport interface PutMetricOptions {\n  /**\n   * Name of the trace to set its metric.\n   *\n   * @since 6.3.0\n   */\n  traceName: string;\n  /**\n   * The metric name.\n   *\n   * @since 6.3.0\n   */\n  metricName: string;\n  /**\n   * The value to set for the metric.\n   * The given value is floored down to the nearest integer.\n   *\n   * @since 6.3.0\n   */\n  num: number;\n}\n\n/**\n * @since 6.3.0\n */\nexport interface GetMetricOptions {\n  /**\n   * Name of the trace to get its metric.\n   *\n   * @since 6.3.0\n   */\n  traceName: string;\n  /**\n   * The metric name.\n   *\n   * @since 6.3.0\n   */\n  metricName: string;\n}\n\n/**\n * @since 6.3.0\n */\nexport interface GetMetricResult {\n  /**\n   * The value of the metric if exists.\n   *\n   * @since 6.3.0\n   */\n  value: number;\n}\n\n/**\n * @since 6.3.0\n */\nexport interface RecordOptions {\n  /**\n   * Name of the trace to record.\n   *\n   * @since 6.3.0\n   */\n  traceName: string;\n  /**\n   * Start time of the trace since epoch in milliseconds.\n   *\n   * @since 6.3.0\n   */\n  startTime: number;\n  /**\n   * The duration of the trace in milliseconds.\n   *\n   * @since 6.3.0\n   */\n  duration: number;\n  /**\n   * An optional object that holds optional maps of custom metrics and attributes.\n   *\n   * @since 6.3.0\n   */\n  options?: {\n    /**\n     * An optional map of metrics to be set on the trace.\n     *\n     * @since 6.3.0\n     */\n    metrics?: { [key: string]: number };\n    /**\n     * An optional map of attributes to be set on the trace.\n     *\n     * @since 6.3.0\n     */\n    attributes?: { [key: string]: string };\n  };\n}\n"]}