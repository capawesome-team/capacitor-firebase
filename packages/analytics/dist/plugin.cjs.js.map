{"version":3,"file":"plugin.cjs.js","sources":["esm/definitions.js","esm/index.js","esm/web.js"],"sourcesContent":["/**\n * @since 6.0.0\n */\nexport var ConsentType;\n(function (ConsentType) {\n    /**\n     * @since 6.0.0\n     */\n    ConsentType[\"AdPersonalization\"] = \"AD_PERSONALIZATION\";\n    /**\n     * @since 6.0.0\n     */\n    ConsentType[\"AdStorage\"] = \"AD_STORAGE\";\n    /**\n     * @since 6.0.0\n     */\n    ConsentType[\"AdUserData\"] = \"AD_USER_DATA\";\n    /**\n     * @since 6.0.0\n     */\n    ConsentType[\"AnalyticsStorage\"] = \"ANALYTICS_STORAGE\";\n    /**\n     * @since 6.0.0\n     */\n    ConsentType[\"FunctionalityStorage\"] = \"FUNCTIONALITY_STORAGE\";\n    /**\n     * @since 6.0.0\n     */\n    ConsentType[\"PersonalizationStorage\"] = \"PERSONALIZATION_STORAGE\";\n})(ConsentType || (ConsentType = {}));\n/**\n * @since 6.0.0\n */\nexport var ConsentStatus;\n(function (ConsentStatus) {\n    /**\n     * @since 6.0.0\n     */\n    ConsentStatus[\"Granted\"] = \"GRANTED\";\n    /**\n     * @since 6.0.0\n     */\n    ConsentStatus[\"Denied\"] = \"DENIED\";\n})(ConsentStatus || (ConsentStatus = {}));\n//# sourceMappingURL=definitions.js.map","import { registerPlugin } from '@capacitor/core';\nconst FirebaseAnalytics = registerPlugin('FirebaseAnalytics', {\n    web: () => import('./web').then(m => new m.FirebaseAnalyticsWeb()),\n});\nexport * from './definitions';\nexport { FirebaseAnalytics };\n//# sourceMappingURL=index.js.map","import { WebPlugin } from '@capacitor/core';\nexport class FirebaseAnalyticsWeb extends WebPlugin {\n    async getAppSessionId() {\n        return {};\n    }\n    async getAppInstanceId() {\n        // throw this.unimplemented('Not implemented on web.');\n        return {};\n    }\n    async setConsent(_options) {\n        return;\n        // const status: ConsentStatusString =\n        //   options.status === ConsentStatus.Granted ? 'granted' : 'denied';\n        // const consentSettings: ConsentSettings = {};\n        // switch (options.type) {\n        //   case ConsentType.AdPersonalization:\n        //     consentSettings.ad_personalization = status;\n        //     break;\n        //   case ConsentType.AdStorage:\n        //     consentSettings.ad_storage = status;\n        //     break;\n        //   case ConsentType.AdUserData:\n        //     consentSettings.ad_user_data = status;\n        //     break;\n        //   case ConsentType.AnalyticsStorage:\n        //     consentSettings.analytics_storage = status;\n        //     break;\n        //   case ConsentType.FunctionalityStorage:\n        //     consentSettings.functionality_storage = status;\n        //     break;\n        //   case ConsentType.PersonalizationStorage:\n        //     consentSettings.personalization_storage = status;\n        //     break;\n        // }\n        // setConsent(consentSettings);\n    }\n    async setUserId(_options) {\n        // const analytics = getAnalytics();\n        // setUserId(analytics, options.userId);\n        return;\n    }\n    async setUserProperty(_options) {\n        // const analytics = getAnalytics();\n        // setUserProperties(analytics, {\n        //   [options.key]: options.value,\n        // });\n        return;\n    }\n    async setCurrentScreen(_options) {\n        // const analytics = getAnalytics();\n        // logEvent(analytics, 'screen_view', {\n        //   firebase_screen: options.screenName || undefined,\n        //   firebase_screen_class: options.screenClassOverride || undefined,\n        // });\n        return;\n    }\n    async logEvent(_options) {\n        // const analytics = getAnalytics();\n        // logEvent(analytics, options.name, options.params);\n        return;\n    }\n    async setSessionTimeoutDuration(_options) {\n        // throw this.unimplemented('Not implemented on web.');\n        return;\n    }\n    async setEnabled(_options) {\n        // const analytics = getAnalytics();\n        // setAnalyticsCollectionEnabled(analytics, _options.enabled);\n        return;\n    }\n    async isEnabled() {\n        // const enabled = (window as any)['ga-disable-analyticsId'] === true;\n        // return {\n        //   enabled,\n        // };\n        return { enabled: true };\n    }\n    async resetAnalyticsData() {\n        // throw this.unimplemented('Not implemented on web.');\n        return;\n    }\n}\n//# sourceMappingURL=web.js.map"],"names":["ConsentType","ConsentStatus","registerPlugin","WebPlugin"],"mappings":";;;;AAAA;AACA;AACA;AACWA;AACX,CAAC,UAAU,WAAW,EAAE;AACxB;AACA;AACA;AACA,IAAI,WAAW,CAAC,mBAAmB,CAAC,GAAG,oBAAoB;AAC3D;AACA;AACA;AACA,IAAI,WAAW,CAAC,WAAW,CAAC,GAAG,YAAY;AAC3C;AACA;AACA;AACA,IAAI,WAAW,CAAC,YAAY,CAAC,GAAG,cAAc;AAC9C;AACA;AACA;AACA,IAAI,WAAW,CAAC,kBAAkB,CAAC,GAAG,mBAAmB;AACzD;AACA;AACA;AACA,IAAI,WAAW,CAAC,sBAAsB,CAAC,GAAG,uBAAuB;AACjE;AACA;AACA;AACA,IAAI,WAAW,CAAC,wBAAwB,CAAC,GAAG,yBAAyB;AACrE,CAAC,EAAEA,mBAAW,KAAKA,mBAAW,GAAG,EAAE,CAAC,CAAC;AACrC;AACA;AACA;AACWC;AACX,CAAC,UAAU,aAAa,EAAE;AAC1B;AACA;AACA;AACA,IAAI,aAAa,CAAC,SAAS,CAAC,GAAG,SAAS;AACxC;AACA;AACA;AACA,IAAI,aAAa,CAAC,QAAQ,CAAC,GAAG,QAAQ;AACtC,CAAC,EAAEA,qBAAa,KAAKA,qBAAa,GAAG,EAAE,CAAC,CAAC;;AC1CpC,MAAC,iBAAiB,GAAGC,mBAAc,CAAC,mBAAmB,EAAE;AAC9D,IAAI,GAAG,EAAE,MAAM,mDAAe,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,oBAAoB,EAAE,CAAC;AACtE,CAAC;;ACFM,MAAM,oBAAoB,SAASC,cAAS,CAAC;AACpD,IAAI,MAAM,eAAe,GAAG;AAC5B,QAAQ,OAAO,EAAE;AACjB;AACA,IAAI,MAAM,gBAAgB,GAAG;AAC7B;AACA,QAAQ,OAAO,EAAE;AACjB;AACA,IAAI,MAAM,UAAU,CAAC,QAAQ,EAAE;AAC/B,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,MAAM,SAAS,CAAC,QAAQ,EAAE;AAC9B;AACA;AACA,QAAQ;AACR;AACA,IAAI,MAAM,eAAe,CAAC,QAAQ,EAAE;AACpC;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA,IAAI,MAAM,gBAAgB,CAAC,QAAQ,EAAE;AACrC;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA,IAAI,MAAM,QAAQ,CAAC,QAAQ,EAAE;AAC7B;AACA;AACA,QAAQ;AACR;AACA,IAAI,MAAM,yBAAyB,CAAC,QAAQ,EAAE;AAC9C;AACA,QAAQ;AACR;AACA,IAAI,MAAM,UAAU,CAAC,QAAQ,EAAE;AAC/B;AACA;AACA,QAAQ;AACR;AACA,IAAI,MAAM,SAAS,GAAG;AACtB;AACA;AACA;AACA;AACA,QAAQ,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE;AAChC;AACA,IAAI,MAAM,kBAAkB,GAAG;AAC/B;AACA,QAAQ;AACR;AACA;;;;;;;;;"}