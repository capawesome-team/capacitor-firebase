{"version":3,"file":"plugin.js","sources":["esm/index.js","esm/web.js"],"sourcesContent":["import { registerPlugin } from '@capacitor/core';\nconst FirebaseStorage = registerPlugin('FirebaseStorage', {\n    web: () => import('./web').then(m => new m.FirebaseStorageWeb()),\n});\nexport * from './definitions';\nexport { FirebaseStorage };\n//# sourceMappingURL=index.js.map","import { WebPlugin } from '@capacitor/core';\nimport { connectStorageEmulator, deleteObject, getDownloadURL, getMetadata, getStorage, list, ref, updateMetadata, uploadBytesResumable, } from 'firebase/storage';\nexport class FirebaseStorageWeb extends WebPlugin {\n    async deleteFile(options) {\n        const storage = getStorage();\n        const storageRef = ref(storage, options.path);\n        await deleteObject(storageRef);\n    }\n    async getDownloadUrl(options) {\n        const storage = getStorage();\n        const storageRef = ref(storage, options.path);\n        const downloadUrl = await getDownloadURL(storageRef);\n        return { downloadUrl };\n    }\n    async getMetadata(options) {\n        const storage = getStorage();\n        const storageRef = ref(storage, options.path);\n        const metadata = await getMetadata(storageRef);\n        const result = {\n            bucket: metadata.bucket,\n            createdAt: new Date(metadata.timeCreated).getTime(),\n            generation: metadata.generation,\n            metadataGeneration: metadata.metageneration,\n            name: metadata.name,\n            path: metadata.fullPath,\n            size: metadata.size,\n            updatedAt: new Date(metadata.updated).getTime(),\n            cacheControl: metadata.cacheControl,\n            contentDisposition: metadata.contentDisposition,\n            contentEncoding: metadata.contentEncoding,\n            contentLanguage: metadata.contentLanguage,\n            contentType: metadata.contentType,\n            customMetadata: metadata.customMetadata,\n        };\n        if (metadata.md5Hash) {\n            result.md5Hash = metadata.md5Hash;\n        }\n        return result;\n    }\n    async listFiles(options) {\n        const storage = getStorage();\n        const storageRef = ref(storage, options.path);\n        const listOptions = {\n            maxResults: options.maxResults,\n            pageToken: options.pageToken,\n        };\n        const listResult = await list(storageRef, listOptions);\n        const result = {\n            items: listResult.items.map(item => ({\n                bucket: item.bucket,\n                name: item.name,\n                path: item.fullPath,\n            })),\n        };\n        if (listResult.nextPageToken) {\n            result.nextPageToken = listResult.nextPageToken;\n        }\n        return result;\n    }\n    async updateMetadata(options) {\n        const storage = getStorage();\n        const storageRef = ref(storage, options.path);\n        const metadata = {\n            cacheControl: options.metadata.cacheControl,\n            contentDisposition: options.metadata.contentDisposition,\n            contentEncoding: options.metadata.contentEncoding,\n            contentLanguage: options.metadata.contentLanguage,\n            contentType: options.metadata.contentType,\n            customMetadata: options.metadata.customMetadata,\n        };\n        await updateMetadata(storageRef, metadata);\n    }\n    async uploadFile(options, callback) {\n        if (!options.blob) {\n            throw new Error(FirebaseStorageWeb.ERROR_BLOB_MISSING);\n        }\n        const storage = getStorage();\n        const storageRef = ref(storage, options.path);\n        let metadata;\n        if (options.metadata) {\n            metadata = {\n                cacheControl: options.metadata.cacheControl,\n                contentDisposition: options.metadata.contentDisposition,\n                contentEncoding: options.metadata.contentEncoding,\n                contentLanguage: options.metadata.contentLanguage,\n                contentType: options.metadata.contentType,\n                md5Hash: options.metadata.md5Hash,\n                customMetadata: options.metadata.customMetadata,\n            };\n        }\n        const uploadTask = uploadBytesResumable(storageRef, options.blob, metadata);\n        uploadTask.on('state_changed', {\n            next: snapshot => {\n                const result = this.createUploadFileCallbackEvent(snapshot);\n                callback(result, undefined);\n            },\n            error: error => {\n                callback(null, error);\n            },\n            complete: () => {\n                const result = this.createUploadFileCallbackEvent(uploadTask.snapshot);\n                callback(result, undefined);\n            },\n        });\n        return Date.now().toString();\n    }\n    async useEmulator(options) {\n        const storage = getStorage();\n        const port = options.port || 9199;\n        connectStorageEmulator(storage, options.host, port);\n    }\n    createUploadFileCallbackEvent(snapshot) {\n        const result = {\n            progress: snapshot.bytesTransferred / snapshot.totalBytes,\n            bytesTransferred: snapshot.bytesTransferred,\n            totalBytes: snapshot.totalBytes,\n            completed: snapshot.state === 'success',\n        };\n        return result;\n    }\n}\nFirebaseStorageWeb.ERROR_BLOB_MISSING = 'blob must be provided.';\n//# sourceMappingURL=web.js.map"],"names":["registerPlugin","WebPlugin","storage","getStorage","ref","deleteObject","getDownloadURL","getMetadata","list","updateMetadata","uploadBytesResumable","connectStorageEmulator"],"mappings":"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"}