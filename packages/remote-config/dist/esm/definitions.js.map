{"version":3,"file":"definitions.js","sourceRoot":"","sources":["../../src/definitions.ts"],"names":[],"mappings":"AAuQA;;GAEG;AACH,MAAM,CAAN,IAAY,cAmBX;AAnBD,WAAY,cAAc;IACxB;;;;OAIG;IACH,uDAAU,CAAA;IACV;;;;OAIG;IACH,yDAAW,CAAA;IACX;;;;OAIG;IACH,uDAAU,CAAA;AACZ,CAAC,EAnBW,cAAc,KAAd,cAAc,QAmBzB","sourcesContent":["export interface FirebaseRemoteConfigPlugin {\n  /**\n   * Make the last fetched configuration available to the getters.\n   *\n   * @since 1.3.0\n   */\n  activate(): Promise<void>;\n  /**\n   * Perform fetch and activate operations.\n   *\n   * @since 1.3.0\n   */\n  fetchAndActivate(): Promise<void>;\n  /**\n   * Fetch and cache configuration from the Remote Config service.\n   *\n   * @since 1.3.0\n   */\n  fetchConfig(options?: FetchConfigOptions): Promise<void>;\n  /**\n   * Get the value for the given key as a boolean.\n   *\n   * @since 1.3.0\n   */\n  getBoolean(options: GetBooleanOptions): Promise<GetBooleanResult>;\n  /**\n   * Get the value for the given key as a number.\n   *\n   * @since 1.3.0\n   */\n  getNumber(options: GetNumberOptions): Promise<GetNumberResult>;\n  /**\n   * Get the value for the given key as a string.\n   *\n   * @since 1.3.0\n   */\n  getString(options: GetStringOptions): Promise<GetStringResult>;\n  /**\n   * Set the minimum fetch interval.\n   *\n   * Only available for Web.\n   *\n   * @since 1.3.0\n   * @deprecated Use `setSettings(...)` instead.\n   */\n  setMinimumFetchInterval(\n    options: SetMinimumFetchIntervalOptions,\n  ): Promise<void>;\n  /**\n   * Set the remote config settings.\n   *\n   * On Android, the settings values are persisted in SharedPreferences.\n   *\n   * @since 6.2.0\n   */\n  setSettings(options: SetSettingsOptions): Promise<void>;\n  /**\n   * Add a listener for the config update event.\n   *\n   * Only available for Android and iOS.\n   *\n   * @since 5.4.0\n   */\n  addConfigUpdateListener(\n    callback: AddConfigUpdateListenerOptionsCallback,\n  ): Promise<CallbackId>;\n  /**\n   * Remove a listener for the config update event.\n   *\n   * Only available for Android and iOS.\n   *\n   * @since 5.4.0\n   */\n  removeConfigUpdateListener(\n    options: RemoveConfigUpdateListenerOptions,\n  ): Promise<void>;\n  /**\n   * Remove all listeners for this plugin.\n   *\n   * @since 5.4.0\n   */\n  removeAllListeners(): Promise<void>;\n}\n\n/**\n * @since 1.3.0\n */\nexport interface GetOptions {\n  /**\n   * The key of the value to get.\n   *\n   * @since 1.3.0\n   */\n  key: string;\n}\n\n/**\n * @since 1.3.0\n */\nexport interface FetchConfigOptions {\n  /**\n   * Define the maximum age in seconds of an entry in the config cache before it is considered stale.\n   * During development, it's recommended to set a relatively low minimum fetch interval.\n   *\n   * Only available for Android and iOS.\n   *\n   * @since 1.3.0\n   * @default 43200\n   * @see https://firebase.google.com/docs/reference/js/firebase.remoteconfig.RemoteConfigSettings#minimumfetchintervalmillis\n   */\n  minimumFetchIntervalInSeconds?: number;\n}\n\n/**\n * @since 1.3.0\n */\nexport type GetBooleanOptions = GetOptions;\n\n/**\n * @since 1.3.0\n */\nexport type GetNumberOptions = GetOptions;\n\n/**\n * @since 1.3.0\n */\nexport type GetStringOptions = GetOptions;\n\n/**\n * @since 1.3.0\n */\nexport interface GetBooleanResult {\n  /**\n   * The value for the given key as a boolean.\n   *\n   * @since 1.3.0\n   */\n  value: boolean;\n  /**\n   * Indicates at which source this value came from.\n   *\n   * Only available for Android and iOS.\n   *\n   * @since 1.3.0\n   */\n  source?: GetValueSource;\n}\n\n/**\n * @since 1.3.0\n */\nexport interface GetNumberResult {\n  /**\n   * The value for the given key as a number.\n   *\n   * @since 1.3.0\n   */\n  value: number;\n  /**\n   * Indicates at which source this value came from.\n   *\n   * Only available for Android and iOS.\n   *\n   * @since 1.3.0\n   */\n  source?: GetValueSource;\n}\n\n/**\n * @since 1.3.0\n */\nexport interface GetStringResult {\n  /**\n   * The value for the given key as a string.\n   *\n   * @since 1.3.0\n   */\n  value: string;\n  /**\n   * Indicates at which source this value came from.\n   *\n   * Only available for Android and iOS.\n   *\n   * @since 1.3.0\n   */\n  source?: GetValueSource;\n}\n\n/**\n * @since 1.3.0\n */\nexport interface SetMinimumFetchIntervalOptions {\n  /**\n   * Define the maximum age in seconds of an entry in the config cache before it is considered stale.\n   * During development, it's recommended to set a relatively low minimum fetch interval.\n   *\n   * @since 1.3.0\n   * @default 43200\n   * @see https://firebase.google.com/docs/reference/js/remote-config.remoteconfigsettings#remoteconfigsettingsminimumfetchintervalmillis\n   */\n  minimumFetchIntervalInSeconds: number;\n}\n\n/**\n * @since 6.2.0\n */\nexport interface SetSettingsOptions {\n  /**\n   * Defines the maximum amount of milliseconds to wait for a response when fetching configuration from the Remote Config server.\n   *\n   * @since 6.2.0\n   * @default 60\n   * @see https://firebase.google.com/docs/reference/js/remote-config.remoteconfigsettings#remoteconfigsettingsfetchtimeoutmillis\n   */\n  fetchTimeoutInSeconds?: number;\n  /**\n   * Define the maximum age in seconds of an entry in the config cache before it is considered stale.\n   * During development, it's recommended to set a relatively low minimum fetch interval.\n   *\n   * @since 6.2.0\n   * @default 43200\n   * @see https://firebase.google.com/docs/reference/js/remote-config.remoteconfigsettings#remoteconfigsettingsminimumfetchintervalmillis\n   */\n  minimumFetchIntervalInSeconds?: number;\n}\n\n/**\n * @since 5.4.0\n */\nexport type AddConfigUpdateListenerOptionsCallback = (\n  event: AddConfigUpdateListenerOptionsCallbackEvent | null,\n  error: any,\n) => void;\n\n/**\n * @since 5.4.0\n */\nexport interface AddConfigUpdateListenerOptionsCallbackEvent {\n  /**\n   * Parameter keys whose values have been updated from the currently activated values.\n   *\n   * @since 5.4.0\n   */\n  updatedKeys: string[];\n}\n\n/**\n * @since 5.4.0\n */\nexport type CallbackId = string;\n\n/**\n * @since 5.4.0\n */\nexport interface RemoveConfigUpdateListenerOptions {\n  /**\n   * The id of the listener to remove.\n   *\n   * @since 5.4.0\n   */\n  id: CallbackId;\n}\n\n/**\n * @since 1.3.0\n */\nexport enum GetValueSource {\n  /**\n   * Indicates that the value returned is the static default value.\n   *\n   * @since 1.3.0\n   */\n  Static = 0,\n  /**\n   * Indicates that the value returned was retrieved from the defaults set by the client.\n   *\n   * @since 1.3.0\n   */\n  Default = 1,\n  /**\n   * Indicates that the value returned was retrieved from the Firebase Remote Config Server.\n   *\n   * @since 1.3.0\n   */\n  Remote = 2,\n}\n"]}